{"version":3,"sources":["webpack:///./src/components/nav.js","webpack:///./src/components/about.js","webpack:///./src/components/work.js","webpack:///./src/components/music.js","webpack:///./src/components/projects.js","webpack:///./src/components/skills.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Nav","_useState","useState","open","setOpen","react_default","a","createElement","gatsby_browser_entry","query","render","data","_cn","_cn2","socialLinks","allDataJson","edges","node","detail","map","link","index","name","icon","url","className","styles","item","href","src","alt","cn","nav","expandContainer","onClick","expand","items","modules","to","smooth","duration","offset","_2068030508","About","_data$allDataJson$edg","title","description","scrollAnimation_min_default","animateOnce","animateIn","delay","_3358035384","Work","workDetail","job","logo","key","target","rel","_253347352","Music","projectsDetail","project","image","_1639232554","Projects","_2562515410","skillsDetail","skill","_1816786083","IndexPage","layout","seo","keywords","about","work","music","components_projects","components_skills","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","arrayOf","Header","_data$site$siteMetada","id","poster","loop","autoPlay","muted","_3978990474","Layout","Fragment","header","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-ee7ee2f9d9c59fc6a68d.js","sourcesContent":["import React, { useState } from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"react-scroll\"\nimport cn from \"classnames\"\nimport styles from \"./nav.module.css\"\n\nconst Nav = () => {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          allDataJson(filter: { title: { eq: \"Links\" } }) {\n            edges {\n              node {\n                title\n                detail {\n                  name\n                  icon\n                  url\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const links = data.allDataJson.edges[0].node.detail\n        const socialLinks = links.map((link, index) => {\n          const { name, icon, url } = link\n          return (\n            <li className={styles.item}>\n              <a href={url}>\n                <img className={styles.icon} src={icon} alt={name} />\n              </a>\n            </li>\n          )\n        })\n\n        return (\n          <nav className={cn(styles.nav, { [styles.open]: open })}>\n            <div\n              className={styles.expandContainer}\n              onClick={() => setOpen(!open)}\n            >\n              <div className={cn(styles.expand, { [styles.open]: open })} />\n            </div>\n            <ul className={styles.items}>\n              <li className={styles.item}>\n                <Link to=\"about\" smooth={true} duration={500}>\n                  About\n                </Link>\n              </li>\n              <li className={styles.item}>\n                <Link to=\"work\" smooth={true} duration={500}>\n                  Work\n                </Link>\n              </li>\n              <li className={styles.item}>\n                <Link to=\"music\" smooth={true} duration={500}>\n                  Music\n                </Link>\n              </li>\n              <li className={styles.item}>\n                <Link to=\"projects\" smooth={true} duration={500} offset={-20}>\n                  Projects\n                </Link>\n              </li>\n              <li className={styles.item}>\n                <Link to=\"skills\" smooth={true} duration={500} offset={-40}>\n                  Skills\n                </Link>\n              </li>\n              {socialLinks}\n            </ul>\n          </nav>\n        )\n      }}\n    />\n  )\n}\n\nexport default Nav\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Element } from \"react-scroll\"\nimport ScrollAnimation from \"react-animate-on-scroll\"\n\nconst About = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allDataJson(filter: { title: { eq: \"About\" } }) {\n          edges {\n            node {\n              title\n              description\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title, description } = data.allDataJson.edges[0].node\n      return (\n        <Element name=\"about\">\n          <section>\n            <ScrollAnimation animateOnce={true} animateIn=\"zoomIn\">\n              <h2>[ {title} ]</h2>\n            </ScrollAnimation>\n            <ScrollAnimation animateOnce={true} animateIn=\"fadeInUp\" delay={250}>\n              <img className=\"faceball\" src=\"images/me.jpg\" alt=\"Eric Kramer\"/>\n              <p>{description}</p>\n            </ScrollAnimation>\n          </section>\n        </Element>\n      )\n    }}\n  />\n)\n\nexport default About\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Element } from \"react-scroll\"\nimport ScrollAnimation from \"react-animate-on-scroll\"\nimport styles from \"./work.module.css\"\n\nconst Work = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allDataJson(filter: { title: { eq: \"Work\" } }) {\n          edges {\n            node {\n              title\n              detail {\n                name\n                description\n                logo\n                url\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title, detail: jobs } = data.allDataJson.edges[0].node\n      const workDetail = jobs.map((job, index) => {\n        const { url, logo, name, description } = job\n        return (\n          <ScrollAnimation animateOnce={true} animateIn=\"fadeInUp\">\n            <li className={styles.job} key={index}>\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img className={styles.logo} src={logo} alt={name} />\n                <p>{description}</p>\n              </a>\n            </li>\n          </ScrollAnimation>\n        )\n      })\n      return (\n        <Element name=\"work\">\n          <section>\n            <ScrollAnimation animateOnce={true} animateIn=\"zoomIn\" >\n              <h2>[ {title} ]</h2>\n            </ScrollAnimation>\n            <ul className=\"responsive-grid-container\">{workDetail}</ul>\n          </section>\n        </Element>\n      )\n    }}\n  />\n)\n\nexport default Work\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Element } from \"react-scroll\"\nimport ScrollAnimation from \"react-animate-on-scroll\"\nimport styles from \"./projects.module.css\"\n\nconst Music = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allDataJson(filter: { title: { eq: \"Music\" } }) {\n          edges {\n            node {\n              title\n              detail {\n                name\n                description\n                image\n                url\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title, detail: projects } = data.allDataJson.edges[0].node\n      const projectsDetail = projects.map((project, index) => {\n        const { url, image, name, description } = project\n        return (\n          <ScrollAnimation animateOnce={true} animateIn=\"fadeInUp\">\n            <li className={styles.project} key={index}>\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img className={styles.image} src={image} alt={name} />\n                <p>{name} ({description})</p>\n              </a>\n            </li>\n          </ScrollAnimation>\n        )\n      })\n      return (\n        <Element name=\"music\">\n          <section>\n            <ScrollAnimation animateOnce={true} animateIn=\"zoomIn\">\n              <h2>[ {title} ]</h2>\n            </ScrollAnimation>\n            <ul className=\"responsive-grid-container\">{projectsDetail}</ul>\n          </section>\n        </Element>\n      )\n    }}\n  />\n)\n\nexport default Music\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Element } from \"react-scroll\"\nimport ScrollAnimation from \"react-animate-on-scroll\"\nimport styles from \"./projects.module.css\"\n\nconst Projects = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allDataJson(filter: { title: { eq: \"Projects\" } }) {\n          edges {\n            node {\n              title\n              detail {\n                name\n                description\n                image\n                url\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title, detail: projects } = data.allDataJson.edges[0].node\n      const projectsDetail = projects.map((project, index) => {\n        const { url, image, name, description } = project\n        return (\n          <ScrollAnimation animateOnce={true} animateIn=\"fadeInUp\">\n            <li className={styles.project} key={index}>\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img className={styles.image} src={image} alt={name} />\n                <p>{description}</p>\n              </a>\n            </li>\n          </ScrollAnimation>\n        )\n      })\n      return (\n        <Element name=\"projects\">\n          <section>\n            <ScrollAnimation animateOnce={true} animateIn=\"zoomIn\" >\n              <h2>[ {title} ]</h2>\n            </ScrollAnimation>\n            <ul className=\"responsive-grid-container\">{projectsDetail}</ul>\n          </section>\n        </Element>\n      )\n    }}\n  />\n)\n\nexport default Projects\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Element } from \"react-scroll\"\nimport ScrollAnimation from \"react-animate-on-scroll\"\nimport styles from \"./skills.module.css\"\n\nconst Work = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allDataJson(filter: { title: { eq: \"Skills\" } }) {\n          edges {\n            node {\n              title\n              detail {\n                name\n                logo\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title, detail: skills } = data.allDataJson.edges[0].node\n      const skillsDetail = skills.map((skill, index) => {\n        const { url, logo, name, description } = skill\n        return (\n          <ScrollAnimation animateOnce={true} animateIn=\"fadeInUp\" >\n            <li className={styles.skill} key={index}>\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img className={styles.logo} src={logo} alt={name} />\n                <p>{description}</p>\n              </a>\n            </li>\n          </ScrollAnimation>\n        )\n      })\n      return (\n        <Element name=\"skills\">\n          <section>\n            <ScrollAnimation animateOnce={true} animateIn=\"zoomIn\" >\n              <h2>[ {title} ]</h2>\n            </ScrollAnimation>\n            <ul className=\"responsive-grid-container\">{skillsDetail}</ul>\n          </section>\n        </Element>\n      )\n    }}\n  />\n)\n\nexport default Work\n","import React from \"react\"\nimport Layout from \"../components/layout\"\n// import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Nav from \"../components/nav\"\nimport About from \"../components/about\"\nimport Work from \"../components/work\"\nimport Music from \"../components/music\"\nimport Projects from \"../components/projects\"\nimport Skills from \"../components/skills\"\nimport \"animate.css/animate.min.css\"\n\nconst IndexPage = () => (\n    <Layout>\n      <SEO title=\"Eric Kramer\" keywords={[`Eric Kramer`]} />\n      <Nav />\n      <About />\n      <Work />\n      <Music />\n      <Projects />\n      <Skills />\n    </Layout>\n  )\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styles from \"./header.module.css\"\n\nconst Header = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title, description } = data.site.siteMetadata;\n      return (\n        <header>\n          <video\n            id=\"background-vid\"\n            src=\"/images/clouds.mov\"\n            poster=\"/images/clouds.png\"\n            loop\n            autoPlay\n            muted\n          />\n          <div className=\"gradient\" />\n          <div className=\"vignette\" />\n          <h1 className={styles.title}>{title}</h1>\n          <h2 className={styles.description}>{description}</h2>\n        </header>\n      )\n    }}\n  />\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n    <main>{children}</main>\n    <footer>© {new Date().getFullYear()}</footer>\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}